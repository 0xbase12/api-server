<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>ring-dep</artifactId>
  <packaging>pom</packaging>
  <version>3.69-SNAPSHOT</version>
  <name>server/ring</name>
  <url>http://sixsq.com</url>

  <parent>
    <groupId>sixsq.nuvla.server</groupId>
    <artifactId>server</artifactId>
    <version>3.69-SNAPSHOT</version>
  </parent>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <properties>
    <installation.dir>/opt/nuvla/ring</installation.dir>
  </properties>

  <profiles>
    
    <profile>
      <id>run-tests</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>lein-test</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>lein</executable>
                  <arguments>
                    <argument>test</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>cimi-container</id>
      <activation>
        <property>
          <name>!skipContainers</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- docker build -->
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.24.0</version>
            <configuration>
              <images>
                <image>
                  <alias>ring</alias>
                  <name>sixsq/ring:${project.version}</name>
                  <build>
                    <from>openjdk:8-jre-alpine</from>
                    <optimise>true</optimise>
                    <assembly>
                      <targetDir>/</targetDir>
                      <inline>
                        <fileSets>
                          <fileSet>
                            <directory>target</directory>
                            <outputDirectory>${installation.dir}/lib</outputDirectory>
                            <includes>
                              <include>*.jar</include>
                            </includes>
                          </fileSet>
                        </fileSets>
                        <files>
                          <file>
                            <source>src/scripts/log4j.properties</source>
                            <outputDirectory>/opt/nuvla/ring-example/resources</outputDirectory>
                          </file>
                        </files>
                      </inline>
                    </assembly>
                    <runCmds>
                      <runCmd>apk update</runCmd>
                      <runCmd>apk add openssl openssh shadow</runCmd>
                      <runCmd>/usr/sbin/groupadd -r nuvla</runCmd>
                      <runCmd>/usr/sbin/useradd -r -d ${installation.dir} -g nuvla nuvla</runCmd>
                      <runCmd>mkdir -p /opt/nuvla/server/.ssh</runCmd>
                      <runCmd>chmod 700 /opt/nuvla/server/.ssh</runCmd>
                      <runCmd>ssh-keygen -q -f /opt/nuvla/server/.ssh/id_rsa -N ""</runCmd>
                      <runCmd>chown -R nuvla.nuvla /opt/nuvla/server/.ssh</runCmd>
                      <runCmd>mkdir -p /opt/nuvla/ring-example/lib</runCmd>
                      <runCmd>mkdir -p /var/log/nuvla/ring-example</runCmd>
                    </runCmds>
                    <env>
                      <NUVLA_RING_CONTAINER_INIT>sixsq.nuvla.server.ring-example/init</NUVLA_RING_CONTAINER_INIT>
                      <NUVLA_RING_CONTAINER_PORT>5000</NUVLA_RING_CONTAINER_PORT>
                      <NUVLA_RING_CONTAINER_HOST>0.0.0.0</NUVLA_RING_CONTAINER_HOST>
                    </env>
                    <ports>
                      <port>5000</port>
                    </ports>
                    <tags>latest</tags>
                    <workdir>/opt/nuvla/ring-example</workdir>
                    <cmd>/usr/bin/java -cp "/opt/nuvla/ring/lib/*:resources:lib/*" sixsq.nuvla.server.ring_container</cmd>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>docker-build</id>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
  </profiles>

  <build>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>lein-install</id>
            <phase>install</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>lein</executable>
              <arguments>
                <argument>install</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>lein-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>lein</executable>
              <arguments>
                <argument>deploy</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>lein-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>lein</executable>
              <arguments>
                <argument>clean</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
